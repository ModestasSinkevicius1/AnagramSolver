// <auto-generated />
using System;
using AnagramSolver.EF.CodeFirst.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnagramSolver.EF.CodeFirst.Migrations
{
    [DbContext(typeof(AnagramDBCodeFirstContext))]
    partial class AnagramDBCodeFirstContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.CachedWord", b =>
                {
                    b.Property<int>("CachedWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SearchingWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WordID")
                        .HasColumnType("int");

                    b.HasKey("CachedWordID");

                    b.HasIndex("WordID");

                    b.ToTable("CachedWord");
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.UserLog", b =>
                {
                    b.Property<int>("UserLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SearchTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SearchingWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WordID")
                        .HasColumnType("int");

                    b.HasKey("UserLogID");

                    b.HasIndex("WordID");

                    b.ToTable("UserLog");
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.WordEnt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Word")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.CachedWord", b =>
                {
                    b.HasOne("AnagramSolver.EF.CodeFirst.Models.WordEnt", "Word")
                        .WithMany("CachedWords")
                        .HasForeignKey("WordID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.UserLog", b =>
                {
                    b.HasOne("AnagramSolver.EF.CodeFirst.Models.WordEnt", "Word")
                        .WithMany("UserLogs")
                        .HasForeignKey("WordID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.WordEnt", b =>
                {
                    b.Navigation("CachedWords");

                    b.Navigation("UserLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
